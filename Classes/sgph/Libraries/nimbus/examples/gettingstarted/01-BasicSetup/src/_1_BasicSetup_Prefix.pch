//
// Copyright 2011 Jeff Verkoeyen
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

/**
 * Prefix headers are useful when you have a large number of files in a project that all
 * include the same set of headers. By precompiling the headers once for every file, your
 * project will build each individual source file much faster. The prefix header is also
 * prepended to each source file during compilation so the headers imported in a prefix
 * header don't need to be imported again in the source file.
 *
 * The benefits of a prefix header are most noticed in projects that have a large number of
 * source files (in the 100s). For projects with only a few files, the upfront cost of
 * precompiling the prefix header may outweigh the savings on each file.
 *
 * All Nimbus projects will use a prefix header for consistency's sake. Because of this
 * prefix header, you will not see any Nimbus headers included in any source within each
 * project.
 */

#ifdef __OBJC__
#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

/**
 * +Additions headers supplement existing classes with additional methods.
 *
 * Due to these additions existing in the global namespace of existing classes, it's possible
 * that you may experience naming conflicts with your own code or other libraries. If this happens
 * to you then you can simply include the header without +Additions, though you will lose
 * access to the additions found within the library.
 */
#import "NimbusCore+Additions.h"

#endif
